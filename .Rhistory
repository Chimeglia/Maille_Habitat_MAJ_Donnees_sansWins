listeIndicateurs_sectorisation <- input$liste_ind_2
Resultat(nb_mailles,population_min,nb_secteurs,listeIndicateurs_maillage,listeIndicateurs_sectorisation)
})
}
shinyApp(ui = ui, server = server)
load("Données/Donnees_Logement_MAJ.Rdata")
Donnees_Logement=Donnees_Logement_MAJ
Import_carteCommunesCorses=st_read("Données/SHP_COMMUNES/COMMUNE.shp")
carteCommunesCorses=Import_carteCommunesCorses %>% select(INSEE_COM,geometry)
colnames(carteCommunesCorses)[1]="CODGEO"
carteCommunesCorses=carteCommunesCorses %>% arrange(CODGEO)
carteCommunesCorses <- st_transform(carteCommunesCorses, crs = 4326)
Indicateurs_Complet= Donnees_Logement %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / RP, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(CODGEO,LIBGEO,POP,LOG,contains("indic")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parCommune= Indicateurs_Complet %>%
select(CODGEO,LIBGEO,POP,LOG,listeIndicateurs_maillage)
nb_mailles=36
population_min=2500
nb_secteurs=4
listeIndicateurs_complete=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revTot_annee","indic.airbnb.revMoy_lgt","indic.log")
listeIndicateurs_maillage=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revMoy_lgt")
listeIndicateurs_sectorisation=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revTot_annee","indic.log")
load("Données/Donnees_Logement_MAJ.Rdata")
Donnees_Logement=Donnees_Logement_MAJ
Import_carteCommunesCorses=st_read("Données/SHP_COMMUNES/COMMUNE.shp")
carteCommunesCorses=Import_carteCommunesCorses %>% select(INSEE_COM,geometry)
colnames(carteCommunesCorses)[1]="CODGEO"
carteCommunesCorses=carteCommunesCorses %>% arrange(CODGEO)
carteCommunesCorses <- st_transform(carteCommunesCorses, crs = 4326)
Indicateurs_Complet= Donnees_Logement %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / RP, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(CODGEO,LIBGEO,POP,LOG,contains("indic")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parCommune= Indicateurs_Complet %>%
select(CODGEO,LIBGEO,POP,LOG,listeIndicateurs_maillage)
listeIndicateurs=Indicateurs_parCommune %>% select(contains("indic")) %>% names()
Indicateurs_parCommune_valeurs=Indicateurs_parCommune[listeIndicateurs]
carteCommunesCorses_spdf=carteCommunesCorses %>% left_join(Indicateurs_parCommune,by="CODGEO")%>% select(CODGEO,LIBGEO,POP) %>%  as("Spatial")
table_voisinage=poly2nb(carteCommunesCorses_spdf,queen=F)
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F)
nb_dim <- which(ACP_parCommunes$eig[, 3] > 80)[1]
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F,ncp = nb_dim)
donnees_pondérations=ACP_parCommunes$ind$coord
pondérations=nbcosts(table_voisinage, data = donnees_pondérations)
table_voisinage_pondérée=nb2listw(table_voisinage, glist = pondérations, style = "C")
arbre_poids_minimal <- mstree(table_voisinage_pondérée)
resultat_skater=skater(edges = arbre_poids_minimal[,1:2],data=donnees_pondérations,ncuts=nb_mailles-1,crit=population_min,vec.crit=Donnees_Logement$POP)
carteMailles=carteCommunesCorses %>% mutate(maille=resultat_skater$groups) %>%  group_by(maille) %>%  summarise(geometry = st_union(geometry))
Maillage=data.frame(CODGEO=Indicateurs_parCommune$CODGEO,maille=resultat_skater$groups)
print("maillage terminé")
Indicateurs_parMaille=Maillage %>%
left_join(Donnees_Logement, by="CODGEO") %>%
group_by(maille) %>%
summarise_if(is.numeric, funs(sum(., na.rm = TRUE))) %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / tot_lgmt, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(maille,POP,LOG,listeIndicateurs_sectorisation) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parMaille_valeurs=Indicateurs_parMaille %>% select(contains("indic"))
acp_parMailles=PCA(Indicateurs_parMaille_valeurs,ncp=5,graph=F)
hc4 <- HCPC(acp_parMailles, nb.clust = nb_secteurs, consol = F, graph = F)
cl4 <- data.frame(maille = Indicateurs_parMaille$maille, cl_maille4 = hc4$data.clust[,"clust"])
print("sectorisation terminée")
carteMaillesSecteurs <- ms_simplify(left_join(carteMailles, cl4, by = "maille"))
carteCommunesCorses_merged <- left_join(carteCommunesCorses, Donnees_Logement, by = "CODGEO")
carteCommunesCorses_sf <- ms_simplify(st_as_sf(carteCommunesCorses_merged))
Indicateurs_ac_mailles_et_secteurs=Indicateurs_Complet %>%
left_join(Maillage, by="CODGEO") %>%
left_join(cl4, by="maille")
View(Indicateurs_ac_mailles_et_secteurs)
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
Indicateurs_ac_mailles_et_secteurs=Indicateurs_Complet %>%
left_join(Maillage, by="CODGEO") %>%
left_join(cl4, by="maille")
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
colnames(Indicateurs_ac_mailles_et_secteurs)
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004")
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
head(Indicateurs_ac_mailles_et_secteurs$CODGEO)
head(Indicateurs_ac_mailles_et_secteurs$CODGEO)
distinct(Indicateurs_ac_mailles_et_secteurs, CODGEO)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, message=F,warning=F)
Resultat=function(i,nb_mailles,population_min,nb_secteurs,listeIndicateurs_maillage,listeIndicateurs_sectorisation) {
load("Données/Donnees_Logement_MAJ.Rdata")
Donnees_Logement=Donnees_Logement_MAJ
Import_carteCommunesCorses=st_read("Données/SHP_COMMUNES/COMMUNE.shp")
carteCommunesCorses=Import_carteCommunesCorses %>% select(INSEE_COM,geometry)
colnames(carteCommunesCorses)[1]="CODGEO"
carteCommunesCorses=carteCommunesCorses %>% arrange(CODGEO)
carteCommunesCorses <- st_transform(carteCommunesCorses, crs = 4326)
Indicateurs_Complet= Donnees_Logement %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / RP, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(CODGEO,LIBGEO,POP,LOG,contains("indic")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parCommune= Indicateurs_Complet %>%
select(CODGEO,LIBGEO,POP,LOG,listeIndicateurs_maillage)
listeIndicateurs=Indicateurs_parCommune %>% select(contains("indic")) %>% names()
Indicateurs_parCommune_valeurs=Indicateurs_parCommune[listeIndicateurs]
carteCommunesCorses_spdf=carteCommunesCorses %>% left_join(Indicateurs_parCommune,by="CODGEO")%>% select(CODGEO,LIBGEO,POP) %>%  as("Spatial")
table_voisinage=poly2nb(carteCommunesCorses_spdf,queen=F)
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F)
nb_dim <- which(ACP_parCommunes$eig[, 3] > 80)[1]
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F,ncp = nb_dim)
donnees_pondérations=ACP_parCommunes$ind$coord
pondérations=nbcosts(table_voisinage, data = donnees_pondérations)
table_voisinage_pondérée=nb2listw(table_voisinage, glist = pondérations, style = "C")
arbre_poids_minimal <- mstree(table_voisinage_pondérée)
resultat_skater=skater(edges = arbre_poids_minimal[,1:2],data=donnees_pondérations,ncuts=nb_mailles-1,crit=population_min,vec.crit=Donnees_Logement$POP)
carteMailles=carteCommunesCorses %>% mutate(maille=resultat_skater$groups) %>%  group_by(maille) %>%  summarise(geometry = st_union(geometry))
Maillage=data.frame(CODGEO=Indicateurs_parCommune$CODGEO,maille=resultat_skater$groups)
Indicateurs_parMaille=Maillage %>%
left_join(Donnees_Logement, by="CODGEO") %>%
group_by(maille) %>%
summarise_if(is.numeric, funs(sum(., na.rm = TRUE))) %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / tot_lgmt, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(maille,POP,LOG,listeIndicateurs_sectorisation) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parMaille_valeurs=Indicateurs_parMaille %>% select(contains("indic"))
acp_parMailles=PCA(Indicateurs_parMaille_valeurs,ncp=5,graph=F)
hc4 <- HCPC(acp_parMailles, nb.clust = nb_secteurs, consol = F, graph = F)
cl4 <- data.frame(maille = Indicateurs_parMaille$maille, cl_maille4 = hc4$data.clust[,"clust"])
carteMaillesSecteurs <- ms_simplify(left_join(carteMailles, cl4, by = "maille"))
carteCommunesCorses_merged <- left_join(carteCommunesCorses, Donnees_Logement, by = "CODGEO")
carteCommunesCorses_sf <- ms_simplify(st_as_sf(carteCommunesCorses_merged))
Indicateurs_ac_mailles_et_secteurs=Indicateurs_Complet %>%
left_join(Maillage, by="CODGEO") %>%
left_join(cl4, by="maille")
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
Secteur_Lozzi= Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2B147") %>%
select(cl_maille4) %>%
pull()
Secteur_POVO= Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A247") %>%
select(cl_maille4) %>%
pull()
palette=rep(NA,nb_secteurs)
palette[Secteur_Ajaccio]="deeppink"
palette[Secteur_Lozzi]="seagreen3"
palette[Secteur_POVO]="orange2"
palette[which(is.na(palette))]=c("blueviolet", "coral1","cadetblue1")
#palette = c("seagreen3", "orange2","blueviolet", "deeppink")
# Création d'une palette de couleurs pour les secteurs
palSecteurs = colorFactor(palette, domain = carteMaillesSecteurs$cl_maille4)
# Création d'une carte des communes avec un trait gris fin
carteCommunes = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = "white",
fillOpacity = 0.8,
color = "gray",
weight = 1)
# Ajout des mailles avec un trait noir plus épais et colorées selon le secteur
carte_MAJ=carteCommunes %>%
addPolygons(data = carteMaillesSecteurs,
fillColor = ~palSecteurs(cl_maille4),
fillOpacity = 0.8,
color = "black",
weight = 2)
Nom_cartes_resultat=generer_noms_cartes_resultat(i)
saveWidget(carte_MAJ, file = Nom_cartes_resultat[1])
webshot(Nom_cartes_resultat[1], file = Nom_cartes_resultat[2],vwidth = 860, vheight = 860)
}
# Fonction pour générer le nom d'une carte d'indicateur
generer_noms_cartes_resultat=function(i) {
Nom_cartes_resultat = c(paste("Cartes_Interactives/Resultat_", i, ".html", sep = ""),
paste("Cartes_Interactives/Cartes_png/Resultat_", i, ".png", sep = ""))
return(Nom_cartes_resultat)
}
i=1
nb_secteurs=4
listeIndicateurs_sectorisation=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revMoy_lgt")
Resultat(i,nb_mailles,population_min,nb_secteurs,listeIndicateurs_maillage,listeIndicateurs_sectorisation)
nb_mailles=36
population_min=2500
nb_secteurs=4
listeIndicateurs_complete=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revTot_annee","indic.airbnb.revMoy_lgt","indic.log")
listeIndicateurs_maillage=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revMoy_lgt")
listeIndicateurs_sectorisation=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revTot_annee","indic.log")
i=1
nb_secteurs=4
listeIndicateurs_sectorisation=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revMoy_lgt")
Resultat(i,nb_mailles,population_min,nb_secteurs,listeIndicateurs_maillage,listeIndicateurs_sectorisation)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
rm(list = ls())
detach("package:tidyverse", unload = TRUE)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE, message=F,warning=F)
nb_mailles=36
population_min=2500
nb_secteurs=4
listeIndicateurs_complete=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revTot_annee","indic.airbnb.revMoy_lgt","indic.log")
listeIndicateurs_maillage=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revMoy_lgt")
listeIndicateurs_sectorisation=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revTot_annee","indic.log")
Resultat=function(i,nb_mailles,population_min,nb_secteurs,listeIndicateurs_maillage,listeIndicateurs_sectorisation) {
load("Données/Donnees_Logement_MAJ.Rdata")
Donnees_Logement=Donnees_Logement_MAJ
Import_carteCommunesCorses=st_read("Données/SHP_COMMUNES/COMMUNE.shp")
carteCommunesCorses=Import_carteCommunesCorses %>% select(INSEE_COM,geometry)
colnames(carteCommunesCorses)[1]="CODGEO"
carteCommunesCorses=carteCommunesCorses %>% arrange(CODGEO)
carteCommunesCorses <- st_transform(carteCommunesCorses, crs = 4326)
Indicateurs_Complet= Donnees_Logement %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / RP, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(CODGEO,LIBGEO,POP,LOG,contains("indic")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parCommune= Indicateurs_Complet %>%
select(CODGEO,LIBGEO,POP,LOG,listeIndicateurs_maillage)
listeIndicateurs=Indicateurs_parCommune %>% select(contains("indic")) %>% names()
Indicateurs_parCommune_valeurs=Indicateurs_parCommune[listeIndicateurs]
carteCommunesCorses_spdf=carteCommunesCorses %>% left_join(Indicateurs_parCommune,by="CODGEO")%>% select(CODGEO,LIBGEO,POP) %>%  as("Spatial")
table_voisinage=poly2nb(carteCommunesCorses_spdf,queen=F)
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F)
nb_dim <- which(ACP_parCommunes$eig[, 3] > 80)[1]
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F,ncp = nb_dim)
donnees_pondérations=ACP_parCommunes$ind$coord
pondérations=nbcosts(table_voisinage, data = donnees_pondérations)
table_voisinage_pondérée=nb2listw(table_voisinage, glist = pondérations, style = "C")
arbre_poids_minimal <- mstree(table_voisinage_pondérée)
resultat_skater=skater(edges = arbre_poids_minimal[,1:2],data=donnees_pondérations,ncuts=nb_mailles-1,crit=population_min,vec.crit=Donnees_Logement$POP)
carteMailles=carteCommunesCorses %>% mutate(maille=resultat_skater$groups) %>%  group_by(maille) %>%  summarise(geometry = st_union(geometry))
Maillage=data.frame(CODGEO=Indicateurs_parCommune$CODGEO,maille=resultat_skater$groups)
Indicateurs_parMaille=Maillage %>%
left_join(Donnees_Logement, by="CODGEO") %>%
group_by(maille) %>%
summarise_if(is.numeric, funs(sum(., na.rm = TRUE))) %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / tot_lgmt, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(maille,POP,LOG,listeIndicateurs_sectorisation) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parMaille_valeurs=Indicateurs_parMaille %>% select(contains("indic"))
acp_parMailles=PCA(Indicateurs_parMaille_valeurs,ncp=5,graph=F)
hc4 <- HCPC(acp_parMailles, nb.clust = nb_secteurs, consol = F, graph = F)
cl4 <- data.frame(maille = Indicateurs_parMaille$maille, cl_maille4 = hc4$data.clust[,"clust"])
carteMaillesSecteurs <- ms_simplify(left_join(carteMailles, cl4, by = "maille"))
carteCommunesCorses_merged <- left_join(carteCommunesCorses, Donnees_Logement, by = "CODGEO")
carteCommunesCorses_sf <- ms_simplify(st_as_sf(carteCommunesCorses_merged))
Indicateurs_ac_mailles_et_secteurs=Indicateurs_Complet %>%
left_join(Maillage, by="CODGEO") %>%
left_join(cl4, by="maille")
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
Secteur_Lozzi= Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2B147") %>%
select(cl_maille4) %>%
pull()
Secteur_POVO= Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A247") %>%
select(cl_maille4) %>%
pull()
palette=rep(NA,nb_secteurs)
palette[Secteur_Ajaccio]="deeppink"
palette[Secteur_Lozzi]="seagreen3"
palette[Secteur_POVO]="orange2"
palette[which(is.na(palette))]=c("blueviolet", "coral1","cadetblue1")
#palette = c("seagreen3", "orange2","blueviolet", "deeppink")
# Création d'une palette de couleurs pour les secteurs
palSecteurs = colorFactor(palette, domain = carteMaillesSecteurs$cl_maille4)
# Création d'une carte des communes avec un trait gris fin
carteCommunes = leaflet(carteCommunesCorses_sf) %>%
addPolygons(fillColor = "white",
fillOpacity = 0.8,
color = "gray",
weight = 1)
# Ajout des mailles avec un trait noir plus épais et colorées selon le secteur
carte_MAJ=carteCommunes %>%
addPolygons(data = carteMaillesSecteurs,
fillColor = ~palSecteurs(cl_maille4),
fillOpacity = 0.8,
color = "black",
weight = 2)
Nom_cartes_resultat=generer_noms_cartes_resultat(i)
saveWidget(carte_MAJ, file = Nom_cartes_resultat[1])
webshot(Nom_cartes_resultat[1], file = Nom_cartes_resultat[2],vwidth = 860, vheight = 860)
}
# Fonction pour générer le nom d'une carte d'indicateur
generer_noms_cartes_resultat=function(i) {
Nom_cartes_resultat = c(paste("Cartes_Interactives/Resultat_", i, ".html", sep = ""),
paste("Cartes_Interactives/Cartes_png/Resultat_", i, ".png", sep = ""))
return(Nom_cartes_resultat)
}
i=1
nb_secteurs=4
listeIndicateurs_sectorisation=c("indic.transac","indic.menag","indic.rs","indic.lv","indic.jeun","indic.social","indic.prop","indic.duroc","indic.prix","indic.airbnb.nb_lgmt","indic.airbnb.revMoy_lgt")
Resultat(i,nb_mailles,population_min,nb_secteurs,listeIndicateurs_maillage,listeIndicateurs_sectorisation)
load("Données/Donnees_Logement_MAJ.Rdata")
Donnees_Logement=Donnees_Logement_MAJ
Import_carteCommunesCorses=st_read("Données/SHP_COMMUNES/COMMUNE.shp")
carteCommunesCorses=Import_carteCommunesCorses %>% select(INSEE_COM,geometry)
colnames(carteCommunesCorses)[1]="CODGEO"
carteCommunesCorses=carteCommunesCorses %>% arrange(CODGEO)
carteCommunesCorses <- st_transform(carteCommunesCorses, crs = 4326)
Indicateurs_Complet= Donnees_Logement %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / RP, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(CODGEO,LIBGEO,POP,LOG,contains("indic")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parCommune= Indicateurs_Complet %>%
select(CODGEO,LIBGEO,POP,LOG,listeIndicateurs_maillage)
listeIndicateurs=Indicateurs_parCommune %>% select(contains("indic")) %>% names()
Indicateurs_parCommune_valeurs=Indicateurs_parCommune[listeIndicateurs]
carteCommunesCorses_spdf=carteCommunesCorses %>% left_join(Indicateurs_parCommune,by="CODGEO")%>% select(CODGEO,LIBGEO,POP) %>%  as("Spatial")
table_voisinage=poly2nb(carteCommunesCorses_spdf,queen=F)
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F)
nb_dim <- which(ACP_parCommunes$eig[, 3] > 80)[1]
ACP_parCommunes <- Indicateurs_parCommune_valeurs %>%  PCA(graph = F,ncp = nb_dim)
donnees_pondérations=ACP_parCommunes$ind$coord
pondérations=nbcosts(table_voisinage, data = donnees_pondérations)
table_voisinage_pondérée=nb2listw(table_voisinage, glist = pondérations, style = "C")
arbre_poids_minimal <- mstree(table_voisinage_pondérée)
resultat_skater=skater(edges = arbre_poids_minimal[,1:2],data=donnees_pondérations,ncuts=nb_mailles-1,crit=population_min,vec.crit=Donnees_Logement$POP)
carteMailles=carteCommunesCorses %>% mutate(maille=resultat_skater$groups) %>%  group_by(maille) %>%  summarise(geometry = st_union(geometry))
Maillage=data.frame(CODGEO=Indicateurs_parCommune$CODGEO,maille=resultat_skater$groups)
Indicateurs_parMaille=Maillage %>%
left_join(Donnees_Logement, by="CODGEO") %>%
group_by(maille) %>%
summarise_if(is.numeric, funs(sum(., na.rm = TRUE))) %>%
mutate(indic.transac = round(100 * nb_mut / LOG, 1),
indic.menag = round(POP/RP, 1),
indic.rs = round(100 * RSECOCC / LOG, 1),
indic.lv = round(100 * LOGVAC / LOG, 1),
indic.jeun = round(jeun / anc, 1),
indic.social = round(100 * social / tot_lgmt, 1),
indic.prop = round(100 * proprietaire / tot_lgmt, 1),
indic.duroc = duroc,
indic.prix = round(100 * moyenne_prix/rev_ucm, 1),
indic.airbnb.nb_lgmt=round(100*Loc.actives/LOG, 1),
indic.airbnb.revTot_annee=rev.LTM_tot,
indic.airbnb.revMoy_lgt=rev.LTM_moy_lgt,
indic.log=LOG) %>%
select(maille,POP,LOG,listeIndicateurs_sectorisation) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .)))
Indicateurs_parMaille_valeurs=Indicateurs_parMaille %>% select(contains("indic"))
acp_parMailles=PCA(Indicateurs_parMaille_valeurs,ncp=5,graph=F)
hc4 <- HCPC(acp_parMailles, nb.clust = nb_secteurs, consol = F, graph = F)
cl4 <- data.frame(maille = Indicateurs_parMaille$maille, cl_maille4 = hc4$data.clust[,"clust"])
carteMaillesSecteurs <- ms_simplify(left_join(carteMailles, cl4, by = "maille"))
carteCommunesCorses_merged <- left_join(carteCommunesCorses, Donnees_Logement, by = "CODGEO")
carteCommunesCorses_sf <- ms_simplify(st_as_sf(carteCommunesCorses_merged))
Indicateurs_ac_mailles_et_secteurs=Indicateurs_Complet %>%
left_join(Maillage, by="CODGEO") %>%
left_join(cl4, by="maille")
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004") %>%
select(cl_maille4) %>%
pull()
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter("CODGEO" == "2A004") %>%
select(cl_maille4) %>%
pull()
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter("CODGEO" == "2A004")
Secteur_Ajaccio = Indicateurs_ac_mailles_et_secteurs %>%
filter(CODGEO == "2A004")
donnees <- tibble(
Nom = c("Alice", "Bob", "Charlie", "David", "Eve"),
Age = c(25, 30, 22, 35, 28),
Sexe = c("F", "M", "M", "M", "F"),
Note = c(85, 92, 78, 88, 90)
)
# Afficher le dataframe initial
print("DataFrame initial :")
print(donnees)
print(donnees)
# Utiliser la fonction filter pour sélectionner des lignes selon un critère
donnees_filtrees <- donnees %>%
filter(Age > 25, Sexe == "F")
# Utiliser la fonction filter pour sélectionner des lignes selon un critère
donnees_filtrees <- donnees %>%
filter(Age > 25, Sexe = "F")
donnees <- tibble(
Nom = c("Alice", "Bob", "Charlie", "David", "Eve"),
Age = c(25, 30, 22, 35, 28),
Sexe = c("F", "M", "M", "M", "F"),
Note = c(85, 92, 78, 88, 90)
)
# Afficher le dataframe initial
print("DataFrame initial :")
print(donnees)
# Utiliser la fonction filter pour sélectionner des lignes selon un critère
donnees_filtrees <- donnees %>%
filter(Age > 25, Sexe == "F")
library(tidyverse)
donnees <- tibble(
Nom = c("Alice", "Bob", "Charlie", "David", "Eve"),
Age = c(25, 30, 22, 35, 28),
Sexe = c("F", "M", "M", "M", "F"),
Note = c(85, 92, 78, 88, 90)
)
# Afficher le dataframe initial
print("DataFrame initial :")
print(donnees)
# Utiliser la fonction filter pour sélectionner des lignes selon un critère
donnees_filtrees <- donnees %>%
filter(Age > 25, Sexe == "F")
